@page
@model SignalRAssignment.Pages.Product.ShopModel
@{
    ViewData["Title"] = "Product Menu";
}

<h1>Product Menu</h1>

<div class="row mb-4">
    <div class="col-md-6">
        <form method="get">
            <input type="text" name="searchTerm" class="form-control" placeholder="Search by product name" />
            <button type="submit" class="btn btn-primary mt-2">Search</button>
        </form>
    </div>
</div>

<div class="row">
    @if (Model.Products != null && Model.Products.Count > 0)
    {
        foreach (var product in Model.Products)
        {
            <div class="col-md-4 col-sm-6 col-12 mb-4">
                <div class="card h-100">
                    <div class="image-wrapper">
                        <img src="@product.ProductImage" class="card-img-top img-fluid" alt="@product.ProductName">
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@product.ProductName</h5>
                        <h6 class="card-subtitle mb-2 text-muted">Category: @product.Category?.CategoryName</h6>
                        <p class="card-text">Price: @product.Price.ToString("C")</p>
                        <h6 class="text-success">Best Selling</h6>
                        <form method="post" action="/Order/AddToOrder">
                            <input type="hidden" name="ProductID" value="@product.ProductID" />
                            <button type="submit" class="btn btn-success">Order Now</button>
                        </form>
                    </div>
                </div>
            </div>

        }
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.Products.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-route-pageIndex="@(Model.Products.PageIndex - 1)">Previous</a>
                </li>
                @for (int i = 1; i <= Model.Products.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.Products.PageIndex ? "active" : "")">
                        <a class="page-link" asp-route-pageIndex="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.Products.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-route-pageIndex="@(Model.Products.PageIndex + 1)">Next</a>
                </li>
            </ul>
        </nav>
    }
</div>


